# I.O.R.A. Pre-commit Hooks Configuration
# Ensures code quality and consistency before commits

repos:
  # Rust formatting
  - repo: https://github.com/doublify/pre-commit-rust
    rev: v1.0
    hooks:
      - id: fmt
        name: Rust code formatting
        description: Format Rust code with rustfmt
        entry: cargo fmt
        language: system
        pass_filenames: false

  # Rust linting
  - repo: https://github.com/doublify/pre-commit-rust
    rev: v1.0
    hooks:
      - id: clippy
        name: Rust linting
        description: Run clippy linter on Rust code
        entry: cargo clippy -- -D warnings
        language: system
        pass_filenames: false

  # Cargo check
  - repo: https://github.com/doublify/pre-commit-rust
    rev: v1.0
    hooks:
      - id: cargo-check
        name: Cargo compilation check
        description: Check that the code compiles
        entry: cargo check
        language: system
        pass_filenames: false

  # TOML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: TOML formatting
        description: Format TOML files
        files: \.(toml)$
        types: [file]
        exclude: Cargo\.lock$

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: YAML formatting
        description: Format YAML files
        files: \.(yaml|yml)$
        types: [file]

  # JSON formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: JSON formatting
        description: Format JSON files
        files: \.(json)$
        types: [file]

  # Trailing whitespace
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        name: Remove trailing whitespace
        description: Remove trailing whitespace from all files
        exclude: \.(md|rst)$

  # End of file
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: end-of-file-fixer
        name: Fix end of files
        description: Ensure files end with a newline
        exclude: \.(md|rst)$

  # Mixed line endings
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: mixed-line-ending
        name: Fix mixed line endings
        description: Normalize line endings to LF
        args: [--fix=lf]

  # Large files
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files
        name: Check for large files
        description: Prevent large files from being committed
        args: [--maxkb=500]

  # Merge conflict markers
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-merge-conflict
        name: Check merge conflict markers
        description: Check for merge conflict markers

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: Detect secrets
        description: Detect secrets in code
        args: [--baseline, .secrets.baseline]
        exclude: \.(lock|sum)$

  # Environment file validation
  - repo: local
    hooks:
      - id: validate-env-file
        name: Validate .env file
        description: Check that .env file exists and has required variables
        entry: sh -c 'if [ ! -f .env ]; then echo ".env file is missing!"; exit 1; fi'
        language: system
        pass_filenames: false
        files: ^$

# Configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false